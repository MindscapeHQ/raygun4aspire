@model ErrorInstanceViewModel

<section class="padding--24">
  <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
    <h4 class="font-opensans--14--32--600 color--color-text-low-emphasis">Error instance data</h4>
  </header>

  <div class="ei-table">
    <div class="ei-label">Occurred on</div>
    <div id="occurredOnCell" class="ei-result">@Model.RaygunMessage.OccurredOn</div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Class name</div>
    <div class="ei-result">@Model.RaygunMessage.Details.Error.ClassName</div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Message</div>
    <div class="ei-result">@Model.RaygunMessage.Details.Error.Message</div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Data</div>
    <div class="ei-result">@Model.RaygunMessage.Details.Error.Data</div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Version</div>
    <div class="ei-result">@Model.RaygunMessage.Details.Version</div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Tags</div>
    <div class="ei-result">
      @foreach (var tag in Model.RaygunMessage.Details.Tags)
      {
        <div class="ei-tag">@tag</div>
      }
    </div>
  </div>

</section>

<section class="padding--24">
  <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
    <h4 class="font-opensans--14--32--600 color--color-text-low-emphasis">Stacktrace</h4>
  </header>
  
  <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
    <div class="font-opensans--14--32--400 color--color-text-default">Message: @Model.RaygunMessage.Details.Error.Message</div>
  </header>

  <div class="margin-left--24 font-size--0 color--color-text-default">
    @foreach (var frame in Model.RaygunMessage.Details.Error.StackTrace)
    {
      <div>
        @if (!string.IsNullOrWhiteSpace(@frame.ClassName))
        {
          <div class="display--inline-block font-opensans--14--32--400 color--color-code-object">@frame.ClassName</div>
          if (!string.IsNullOrWhiteSpace(@frame.MethodName))
          {
            <div class="display--inline-block font-opensans--14--32--400">.</div>
          }
        }

        @if (@frame.MethodName != null)
        {
          <div class="display--inline-block font-opensans--14--32--400 color--color-code-function">@frame.MethodName</div>
        }

        @if (@frame.FileName != null)
        {
          if (@frame.MethodName != null || @frame.ClassName != null)
          {
            <div class="display--inline-block font-opensans--14--32--400">&nbsp;in&nbsp;</div>
          }
          <div class="display--inline-block font-opensans--14--32--400 color--color-code-filename">@frame.FileName</div>
        }

        @if (@frame.LineNumber != 0)
        {
          if (@frame.FileName != null || @frame.ClassName != null || @frame.FileName != null)
          {
            <div class="display--inline-block font-opensans--14--32--400">:</div>
            <div class="display--inline-block font-opensans--14--32--400 color--color-code-number">@frame.LineNumber</div>
          }
        }
      </div>
    }
  </div>

</section>

<script>
  var occurredOnCell = document.getElementById('occurredOnCell');
  var rawDate = occurredOnCell.textContent;
  var momentDate = moment.utc(rawDate);
  var formattedDate = momentDate.format("MMMM Do YYYY, HH:mm:ss") + " - " + momentDate.fromNow();
  occurredOnCell.textContent = formattedDate;
</script>