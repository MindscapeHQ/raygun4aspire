@using System.Text.Json
@model ErrorInstanceViewModel

<section class="padding--24">
  <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
    <h4 class="font-opensans--14--32--600 color--color-text-low-emphasis">Error instance data</h4>
  </header>

  <div class="ei-table">
    <div class="ei-label">Occurred on</div>
    <div id="occurredOnCell" class="ei-result">@Model.RaygunMessage.OccurredOn</div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Class name</div>
    <div class="ei-result">
      @if (!string.IsNullOrWhiteSpace(Model?.RaygunMessage?.Details?.Error?.ClassName))
      {
        <div>@Model.RaygunMessage.Details.Error.ClassName</div>
      }
      else
      {
        <div>Not provided</div>
      }
    </div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Message</div>
    <div class="ei-result">
      @if (!string.IsNullOrWhiteSpace(Model?.RaygunMessage?.Details?.Error?.Message))
      {
        <div>@Model.RaygunMessage.Details.Error.Message</div>
      }
      else
      {
        <div>Unknown error</div>
      }
    </div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Data</div>
    <div class="ei-result">
      @if (Model?.RaygunMessage?.Details?.Error?.Data != null && Model.RaygunMessage.Details.Error.Data.Count > 0)
      {
        <pre><code class="language-json">@JsonSerializer.Serialize(Model.RaygunMessage.Details.Error.Data, new JsonSerializerOptions { WriteIndented = true })</code></pre>
      }
      else
      {
        <div>Not provided</div>
      }
    </div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Version</div>
    <div class="ei-result">
      @if (!string.IsNullOrWhiteSpace(Model?.RaygunMessage?.Details?.Version))
      {
        <div>@Model.RaygunMessage.Details.Version</div>
      }
      else
      {
        <div>Not provided</div>
      }
    </div>
  </div>

  <div class="ei-table">
    <div class="ei-label">Tags</div>
    <div class="ei-result">
      @if (Model?.RaygunMessage?.Details?.Tags != null && Model.RaygunMessage.Details.Tags.Count > 0)
      {
        @foreach (var tag in Model.RaygunMessage.Details.Tags)
        {
          <div class="ei-tag">@tag</div>
        }
      }
      else
      {
        <div>None provided</div>
      }
    </div>
  </div>

</section>

<section class="padding--24">
  <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
    <h4 class="font-opensans--14--32--600 color--color-text-low-emphasis">Stacktrace</h4>
  </header>
  
  <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
    @if (!string.IsNullOrWhiteSpace(Model?.RaygunMessage?.Details?.Error?.Message))
    {
      <div class="font-opensans--14--32--400 color--color-text-default">Message: @Model.RaygunMessage.Details.Error.Message</div>
    }
    else
    {
      <div class="font-opensans--14--32--400 color--color-text-default">Message: Unknown error</div>
    }
  </header>

  @if (Model?.RaygunMessage?.Details?.Error?.StackTrace != null && Model.RaygunMessage.Details.Error.StackTrace.Count() > 0)
  {
    <div class="margin-left--24 font-size--0 color--color-text-default">
      @foreach (var frame in Model.RaygunMessage.Details.Error.StackTrace)
      {
        <div>
          @if (!string.IsNullOrWhiteSpace(@frame.ClassName))
          {
            <div class="display--inline-block font-opensans--14--32--400 color--color-code-object">@frame.ClassName</div>
            if (!string.IsNullOrWhiteSpace(@frame.MethodName))
            {
              <div class="display--inline-block font-opensans--14--32--400">.</div>
            }
          }

          @if (@frame.MethodName != null)
          {
            <div class="display--inline-block font-opensans--14--32--400 color--color-code-function">@frame.MethodName</div>
          }

          @if (@frame.FileName != null)
          {
            if (@frame.MethodName != null || @frame.ClassName != null)
            {
              <div class="display--inline-block font-opensans--14--32--400">&nbsp;in&nbsp;</div>
            }
            <div class="display--inline-block font-opensans--14--32--400 color--color-code-filename">@frame.FileName</div>
          }

          @if (@frame.LineNumber != 0)
          {
            if (@frame.FileName != null || @frame.ClassName != null || @frame.FileName != null)
            {
              <div class="display--inline-block font-opensans--14--32--400">:</div>
              <div class="display--inline-block font-opensans--14--32--400 color--color-code-number">@frame.LineNumber</div>
            }
          }
        </div>
      }
    </div>
  }
  else
  {
    <h4 class="display--inline-block font-opensans--18--28--600 color--color-text-default">
      No stacktrace data is available for this error.
    </h4>
  }

</section>

@if (Model?.RaygunMessage?.Details?.UserCustomData != null && Model.RaygunMessage.Details.UserCustomData.Count > 0)
{
  <section class="padding--24">
    <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
      <h4 class="font-opensans--14--32--600 color--color-text-low-emphasis">Custom data</h4>
    </header>

    <div class="ei-table padding--12">
      <pre><code class="language-json">@JsonSerializer.Serialize(Model.RaygunMessage.Details.UserCustomData, new JsonSerializerOptions{WriteIndented = true})</code></pre>
    </div>
  </section>
}

<script>
  var occurredOnCell = document.getElementById('occurredOnCell');
  var rawDate = occurredOnCell.textContent;
  var momentDateUtc = moment.utc(rawDate);

  var formattedDateUtc = momentDateUtc.format("MMMM Do YYYY, HH:mm:ss") + " UTC";
  occurredOnCell.title = formattedDateUtc

  var momentDateLocal = momentDateUtc.local();
  var formattedDate = momentDateLocal.format("MMMM Do YYYY, HH:mm:ss") + " - " + momentDateLocal.fromNow();
  occurredOnCell.textContent = formattedDate;
</script>

<script src="~/js/prism.js"></script>
<script src="~/js/prism-json.min.js"></script>