@using System.Text.Json
@model ErrorInstanceViewModel

@{
  string SimplifyJson(string json)
  {
    var lines = json.Split("\n");

    if (lines.Length > 2)
    {
      var isObject = json.StartsWith("{");

      for (int i = 1; i < lines.Length - 1; i++)
      {
        var line = lines[i];
        if (line.StartsWith("  "))
        {
          line = line.Substring(2);
        }
        if (isObject && line.EndsWith(","))
        {
          line = line.Substring(0, line.Length - 1);
        }
        lines[i] = line;
      }

      json = string.Join("\n", lines.Skip(1).Take(lines.Length - 2));
    }

    return json;
  }
}

@if (Model?.RaygunMessage?.Details?.Request != null)
{
  <section class="padding--24">
    <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
      <h4 class="font-opensans--14--32--600 color--color-text-low-emphasis">Request</h4>
    </header>

    <div class="ei-table">
      <div class="ei-label">HTTP method</div>
      <div class="ei-result">
        @if (!string.IsNullOrWhiteSpace(Model.RaygunMessage.Details.Request.HttpMethod))
        {
          <div>@Model.RaygunMessage.Details.Request.HttpMethod</div>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">Host name</div>
      <div class="ei-result">
        @if (!string.IsNullOrWhiteSpace(Model.RaygunMessage.Details.Request.HostName))
        {
          <div>@Model.RaygunMessage.Details.Request.HostName</div>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">IP address</div>
      <div class="ei-result">
        @if (!string.IsNullOrWhiteSpace(Model.RaygunMessage.Details.Request.IPAddress))
        {
          <div>@Model.RaygunMessage.Details.Request.IPAddress</div>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">URL</div>
      <div class="ei-result">
        @if (!string.IsNullOrWhiteSpace(Model.RaygunMessage.Details.Request.Url))
        {
          <a class="no-underline color--color-text-link" href="@Model.RaygunMessage.Details.Request.Url" target="_blank">@Model.RaygunMessage.Details.Request.Url</a>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">User-agent</div>
      <div class="ei-result">
        @if (Model.RaygunMessage.Details.Request.Headers != null && Model.RaygunMessage.Details.Request.Headers.Contains("User-Agent") && Model.RaygunMessage.Details.Request.Headers["User-Agent"] != null && !string.IsNullOrWhiteSpace(Model.RaygunMessage.Details.Request.Headers["User-Agent"].ToString()))
        {
          <div>@Model.RaygunMessage.Details.Request.Headers["User-Agent"]</div>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">Referer</div>
      <div class="ei-result">
        @if (Model.RaygunMessage.Details.Request.Headers != null && Model.RaygunMessage.Details.Request.Headers.Contains("Referer") && Model.RaygunMessage.Details.Request.Headers["Referer"] != null && !string.IsNullOrWhiteSpace(Model.RaygunMessage.Details.Request.Headers["Referer"].ToString()))
        {
          <div>@Model.RaygunMessage.Details.Request.Headers["Referer"]</div>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">Query string</div>
      <div class="ei-result">
        @if (Model.RaygunMessage.Details.Request.QueryString != null && Model.RaygunMessage.Details.Request.QueryString.Count > 0)
        {
          <pre><code class="language-json">@SimplifyJson(JsonSerializer.Serialize(Model.RaygunMessage.Details.Request.QueryString, new JsonSerializerOptions { WriteIndented = true, }))</code></pre>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">Cookie values</div>
      <div class="ei-result">
        @if (Model.RaygunMessage.Details.Request.Cookies != null && Model.RaygunMessage.Details.Request.Cookies.Count > 0)
        {
          if (Model.RaygunMessage.Details.Request.Cookies.Count == 1)
          {
            <div>1 cookie</div>
          }
          else
          {
            <div>@Model.RaygunMessage.Details.Request.Cookies.Count cookies</div>
          }
          <pre><code class="language-json">@SimplifyJson(@JsonSerializer.Serialize(Model.RaygunMessage.Details.Request.Cookies, new JsonSerializerOptions { WriteIndented = true }))</code></pre>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">Header values</div>
      <div class="ei-result">
        @if (Model.RaygunMessage.Details.Request.Headers != null && Model.RaygunMessage.Details.Request.Headers.Count > 0)
        {
          <pre><code class="language-json">@SimplifyJson(@JsonSerializer.Serialize(Model.RaygunMessage.Details.Request.Headers, new JsonSerializerOptions { WriteIndented = true }))</code></pre>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">Form values</div>
      <div class="ei-result">
        @if (Model.RaygunMessage.Details.Request.Form != null && Model.RaygunMessage.Details.Request.Form.Count > 0)
        {
          <pre><code class="language-json">@SimplifyJson(JsonSerializer.Serialize(Model.RaygunMessage.Details.Request.Form, new JsonSerializerOptions { WriteIndented = true, }))</code></pre>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

    <div class="ei-table">
      <div class="ei-label">Raw request data</div>
      <div class="ei-result">
        @if (!string.IsNullOrWhiteSpace(Model.RaygunMessage.Details.Request.RawData))
        {
          <pre><code>@Model.RaygunMessage.Details.Request.RawData</code></pre>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>
    </div>

  </section>
}

@if (Model?.RaygunMessage?.Details?.Response != null)
{
  <section class="padding--24">
    <header class="margin-bottom--12 border-width--0 border-bottom-width--1 border-style--solid border-color--color-border-elevation">
      <h4 class="font-opensans--14--32--600 color--color-text-low-emphasis">Response</h4>
    </header>
  
    <div class="ei-table">
      <div class="ei-label">Status code</div>
      <div class="ei-result">@Model.RaygunMessage.Details.Response.StatusCode</div>
    </div>

    <div class="ei-table">
      <div class="ei-label">Status description</div>
      <div class="ei-result">
        @if (!string.IsNullOrWhiteSpace(Model.RaygunMessage.Details.Response.StatusDescription))
        {
          <div>@Model.RaygunMessage.Details.Response.StatusDescription</div>
        }
        else
        {
          <div>Not provided</div>
        }
      </div>

    </div>

  </section>
}

<script src="~/js/prism.js"></script>
<script src="~/js/prism-json.min.js"></script>